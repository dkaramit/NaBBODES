#ifndef RKF_METHOD
#define RKF_METHOD


template<class LD>
class DormandPrince{
    public:
        const int s=7;
        int p=4;
        LD c[7]={0,1/5.,3/10.,4/5.,8/9.,1.,1.};
        LD b[7]={5179/57600.,0,7571/16695.,393/640.,-92097/339200.,187/2100.,1/40.};
        LD bstar[7]={ 35/384.,0.,500/1113.,125/192.,-2187/6784.,11/84.,0 };
        LD a[7][7];

        ~DormandPrince(){};
        DormandPrince(){
            
            for (int i = 0; i < s; i++){ for (int j = 0; j < s; j++){a[i][j]=0;} }
            
            a[1][0]=1/5.;
            
            a[2][0]=3/40.;
            a[2][1]=9/40.;
            
            a[3][0]=44/45.;
            a[3][1]=-56/15.;
            a[3][2]=32/9.;
            
            a[4][0]=19372/6561.;
            a[4][1]=-25360/2187.;
            a[4][2]=64448/6561.;
            a[4][3]=-212/729. ;       
            

            a[5][0]=9017/3168.;
            a[5][1]=-355/33.;
            a[5][2]=46732/5247.;
            a[5][3]=49/176.;
            a[5][4]=-5103/18656.;
            
            
            a[6][0]=35/384.;
            a[6][1]=0;
            a[6][2]=500/1113.;
            a[6][3]=125/192.;
            a[6][4]=-2187/6784.;
            a[6][5]=11/84.;
        };
};

#endif